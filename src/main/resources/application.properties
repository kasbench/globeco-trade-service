spring.application.name=globeco-trade-service
server.port=8082
server.tomcat.threads.max=200
server.tomcat.max-connections=8192

# Spring Boot Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.info.env.enabled=true
management.info.env.include=systemProperties,systemEnvironment
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# PostgreSQL datasource configuration
spring.datasource.url=jdbc:postgresql://globeco-trade-service-postgresql:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

# Optimized Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=25
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.leak-detection-threshold=30000

# HikariCP Performance Optimizations
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Hibernate Batch Processing Configuration for Bulk Operations
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Additional Performance Optimizations
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Flyway configuration
spring.flyway.url=jdbc:postgresql://globeco-trade-service-postgresql:5432/postgres
spring.flyway.user=postgres
spring.flyway.password=
spring.flyway.schemas=public

# Cache Configuration
cache.security.ttl-minutes=5
cache.security.max-size=1000
cache.portfolio.ttl-minutes=5
cache.portfolio.max-size=1000

# Optimized Cache Configuration
cache.optimized.security.ttl-minutes=10
cache.optimized.security.max-size=2000
cache.optimized.security.refresh-minutes=8
cache.optimized.portfolio.ttl-minutes=15
cache.optimized.portfolio.max-size=1000
cache.optimized.portfolio.refresh-minutes=12

# External Service Configuration
external.security-service.base-url=http://globeco-security-service:8000
external.security-service.timeout=5000
external.portfolio-service.base-url=http://globeco-portfolio-service:8000
external.portfolio-service.timeout=5000
external.service.connect-timeout=5000
external.service.read-timeout=5000

# Execution Service Configuration
execution.service.base-url=http://globeco-execution-service:8084
execution.service.connect-timeout=15000
execution.service.read-timeout=30000
execution.service.retry.max-attempts=5
execution.service.retry.initial-delay=1000
execution.service.retry.multiplier=2
execution.service.retry.max-delay=30000

# Logging Configuration
logging.level.root=${LOG_LEVEL:INFO}
logging.level.org.kasbench=${LOG_LEVEL:INFO}
# Suppress noisy auto-configuration debug messages
logging.level.org.springframework.boot.autoconfigure=INFO
logging.level.org.springframework.boot.autoconfigure.condition=WARN
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Micrometer OpenTelemetry (OTLP) Metrics Export
management.otlp.metrics.export.url=http://otel-collector-collector.monitoring.svc.cluster.local:4318/v1/metrics
management.otlp.metrics.export.step=1m
management.otlp.metrics.export.resource-attributes.service.name=globeco-trade-service
management.otlp.metrics.export.resource-attributes.service.version=1.0.0
management.otlp.metrics.export.resource-attributes.service.namespace=globeco
management.otlp.metrics.export.resource-attributes.service.instance.version=1.0.0
management.otlp.metrics.export.resource-attributes.service.instance.namespace=globeco

# OpenTelemetry Tracing Export (OTLP)
management.otlp.tracing.endpoint=http://otel-collector-collector.monitoring.svc.cluster.local:4318/v1/traces
management.otlp.tracing.resource-attributes.service.name=globeco-trade-service
management.otlp.tracing.resource-attributes.service.version=1.0.0
management.otlp.tracing.resource-attributes.service.namespace=globeco
management.otlp.tracing.resource-attributes.service.instance.namespace=globeco
management.otlp.tracing.sampling.probability=1.0

