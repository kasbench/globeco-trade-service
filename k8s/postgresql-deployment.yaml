apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: globeco-trade-service-postgresql
  namespace: globeco
spec:
  serviceName: globeco-trade-service-postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app: globeco-trade-service-postgresql
  template:
    metadata:
      labels:
        app: globeco-trade-service-postgresql
    spec:
      initContainers:
        - name: init-postgres-data
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /var/lib/postgresql/data/pgdata
              chown -R 999:999 /var/lib/postgresql/data/pgdata
              chmod 700 /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: globeco-trade-service-postgresdb-storage
              mountPath: /var/lib/postgresql/data
      containers:
        - name: globeco-trade-service-postgresql
          image: postgres:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          args:
            - "-c"
            - "listen_addresses=0.0.0.0"
            - "-c"
            - "max_connections=200"
            - "-c"
            - "shared_buffers=256MB"
            - "-c"
            - "effective_cache_size=1GB"
            - "-c"
            - "work_mem=4MB"
            - "-c"
            - "maintenance_work_mem=64MB"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.track=all"
          volumeMounts:
            - name: globeco-trade-service-postgresdb-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "4Gi"
              cpu: "2000m"
            limits:
              memory: "6Gi"
              cpu: "2000m"
  volumeClaimTemplates:
    - metadata:
        name: globeco-trade-service-postgresdb-storage
        labels:
          app: trade-service-postgres
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: local-storage
        resources:
          requests:
            storage: 10Gi
        selector:
          matchLabels:
            app: trade-service-postgres
            type: local